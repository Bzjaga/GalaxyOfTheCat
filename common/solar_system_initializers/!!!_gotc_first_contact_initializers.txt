# Game will first pick an initializer using usage_odds, but only use it if it passes the spawn_chance check
# Even if it fails the spawn_chance check it will still count towards the initializer's max_instances

@jumps = 3
@homeworld_min_size = 18
@homeworld_max_size = 21

##########
# ORIGINS
##########

# MSI Home System
msi_home_system = {
	class = "rl_starting_stars"
	asteroid_belt = {
		type = rocky_asteroid_belt
		radius = 50
	}

	flags = { empire_home_system MSI_home_system }

	usage = misc_system_init

	usage_odds = {
		base = 0
		modifier = {
			NOT = { exists = event_target:MSI_country }
			any_country = {
				has_slave_origin = yes
				NOR = {
					has_country_flag = slavers_assigned
					# don't spawn if AI-generated and adv start disabled
					# see game_start.1
					AND = {
						is_ai = yes
						check_galaxy_setup_value = { setting = num_advanced_empires value < 1 }
					}
				}
			}
			NOT = { has_star_flag = empire_cluster }
			add = 99999
		}
		modifier = {
			NOT = { exists = event_target:MSI_country }
			any_system = {
				exists = owner
				owner = {
					has_slave_origin = yes
				}
				distance = {
					max_jumps = 5
				}
			}
			factor = 0
		}
	}

	init_effect = {
		generate_home_system_resources = yes
	}

	planet = {
		count = 1
		class = star
		orbit_distance = 0
		orbit_angle = 1
		size = { min = 20 max = 30 }
		has_ring = no
	}

	change_orbit = 50

	planet = {
		count = { min = 1 max = 3 }
		class = pc_asteroid
		orbit_distance = 0
		orbit_angle = { min = 40 max = 100 }
	}

	planet = {
		count = { min = 0 max = 2 }
		orbit_distance = 20
		class = random_non_colonizable
		orbit_angle = { min = 90 max = 270 }

		change_orbit = @base_moon_distance

		moon = {
			count = { min = 0 max = 1 }
			class = random_non_colonizable
			orbit_angle = { min = 90 max = 270 }
			orbit_distance = 5
		}
	}

	planet = {
		count = 1
		orbit_distance = 20
		home_planet = yes
		class = pc_relic
		orbit_angle = { min = 90 max = 270 }
		size = 25
		deposit_blockers = none
		modifiers = none
		flags = { MSI_homeworld }

		init_effect = {
			prevent_anomaly = yes
			if = {
				limit = {
					any_playable_country = {
						capital_scope = {
							solar_system = {
								has_star_flag = palestina
							}
						}
					}
				}
				change_pc = pc_desert
				create_MSI_zion = yes
				set_name = {
					key="Сион"
					literal=yes
				}
				solar_system = {
					set_name = {
						key="Сион"
						literal=yes
					}
				}
			}
			else = {
				create_MSI_effect = yes
			}
		}

		change_orbit = @base_moon_distance

		moon = {
			count = { min = 0 max = 1 }
			class = random_non_colonizable
			orbit_angle = { min = 90 max = 270 }
			orbit_distance = 5
		}
	}

	planet = {
		count = { min = 2 max = 4 }
		orbit_distance = 20
		class = random_non_colonizable
		orbit_angle = { min = 90 max = 270 }

		change_orbit = @base_moon_distance

		moon = {
			count = { min = 0 max = 1 }
			class = random_non_colonizable
			orbit_angle = { min = 90 max = 270 }
			orbit_distance = 5
		}
	}

	planet = {
		count = { min = 1 max = 2 }
		orbit_distance = 20
		class = pc_gas_giant
		orbit_angle = { min = 90 max = 270 }

		change_orbit = @base_moon_distance

		moon = {
			count = { min = 0 max = 3 }
			class = random_non_colonizable
			orbit_angle = { min = 90 max = 270 }
			orbit_distance = 5
		}
	}

	init_effect = {
		solar_system = {
			create_starbase = {
				size = starbase_starport
				module = shipyard
				building = crew_quarters
				owner = event_target:MSI_country
				effect = {
					set_starbase_module = {
						slot = 2
						module = trading_hub
					}
				}
			}
		}
	}

	neighbor_system = {
		hyperlane_jumps = { min = 1 max = @jumps }
		initializer = "slavers_neighbor_t1"
	}
	neighbor_system = {
		hyperlane_jumps = { min = 1 max = @jumps }
		initializer = "slavers_neighbor_t1_first_colony"
	}
}

# Neighbor Tier 1
slavers_neighbor_t1 = {
	class = "rl_standard_stars"
	flags = { neighbor_t1 }

	init_effect = {
		every_neighbor_system = { set_star_flag = empire_cluster }
	}

	planet = {
		count = 1
		class = star
		orbit_distance = 0
		orbit_angle = 1
		size = { min = 20 max = 30 }
		has_ring = no
	}

	change_orbit = 45

	planet = {
		count = { min = 0 max = 2 }
		orbit_distance = 20
		change_orbit = @base_moon_distance

		moon = {
			count = { min = 0 max = 1 }
			orbit_distance = 5
		}
	}

	planet = {
		count = { min = 2 max = 5 }
		orbit_distance = 20
	}

	init_effect = {
		if = {
			limit = {
				event_target:MSI_country = {
					has_country_flag = zion
				}
			}
			set_name = {
				key="Негев"
				literal=yes
			}
		}
		create_starbase = {
			size = starbase_outpost
			owner = event_target:MSI_country
		}
	}

	neighbor_system = {
		hyperlane_jumps = { min = 1 max = @jumps }
		initializer = "slavers_neighbor_t2_second_colony"
	}
}

# Neighbor Tier 1 First Colony
slavers_neighbor_t1_first_colony = {
	class = "rl_standard_stars"
	flags = { neighbor_t1_first_colony }

	init_effect = {
		every_neighbor_system = { set_star_flag = empire_cluster }
	}

	planet = {
		count = 1
		class = star
		orbit_distance = 0
		orbit_angle = 1
		size = { min = 20 max = 30 }
		has_ring = no
	}

	change_orbit = 45

	planet = {
		count = { min = 0 max = 2 }
		orbit_distance = 20

		change_orbit = @base_moon_distance

		moon = {
			count = { min = 0 max = 1 }
			orbit_distance = 5
		}
	}

	planet = {
		count = 1
		orbit_distance = 25
		class = pc_continental
		modifiers = none
		anomaly = none
		orbit_angle = { min = 90 max = 270 }
		size = { min = 12 max = 18 }

		init_effect = {
			create_colony = {
				owner = event_target:MSI_country
			}
			add_modifier = { modifier = colonial_remains }
			if = {
				limit = {
					event_target:MSI_country = {
						has_country_flag = zion
					}
				}
				set_name = {
					key="Рамалла"
					literal=yes
				}
				solar_system = {
					set_name = {
						key="Западный Берег"
						literal=yes
					}
				}
				change_pc = pc_desert
				set_planet_flag = ramalla
			}
		}
	}

	planet = {
		count = { min = 2 max = 5 }
		orbit_distance = 25

		change_orbit = @base_moon_distance

		moon = {
			count = { min = 0 max = 1 }
			orbit_distance = 5
		}
	}

	init_effect = {
		create_starbase = {
			size = starbase_outpost
			owner = event_target:MSI_country
		}
	}

	neighbor_system = {
		hyperlane_jumps = { min = 1 max = @jumps }
		initializer = "neighbor_t2"
	}
}

# Neighbor Tier 2 Second Colony
slavers_neighbor_t2_second_colony = {
	class = "rl_standard_stars"
	flags = { neighbor_t2_second_colony }

	init_effect = {
		every_neighbor_system = { set_star_flag = empire_cluster }
	}

	planet = {
		count = 1
		class = star
		orbit_distance = 0
		orbit_angle = 1
		size = { min = 20 max = 30 }
		has_ring = no
	}

	change_orbit = 25

	planet = {
		count = 2
		orbit_angle = { min = 90 max = 270 }
		orbit_distance = 20
	}

	planet = {
		count = 1
		orbit_distance = 25
		class = pc_continental
		modifiers = none
		anomaly = none
		orbit_angle = { min = 90 max = 270 }
		size = { min = 14 max = 24 }

		init_effect = {
			create_colony = {
				owner = event_target:MSI_country
			}
			add_modifier = { modifier = colonial_remains }
			if = {
				limit = {
					event_target:MSI_country = {
						has_country_flag = zion
					}
				}
				set_name = {
					key="Голаны"
					literal=yes
				}
				solar_system = {
					set_name = {
						key="Голанские Высоты"
						literal=yes
					}
				}
				change_pc = pc_arid
				set_planet_flag = golany
			}
		}

		change_orbit = @base_moon_distance

		moon = {
			count = { min = 0 max = 1 }
			class = random_non_colonizable
			orbit_angle = { min = 90 max = 270 }
			orbit_distance = 5
		}
	}

	planet = {
		count = 2
		orbit_angle = { min = 90 max = 270 }
		orbit_distance = 20

		change_orbit = @base_moon_distance

		moon = {
			count = { min = 0 max = 1 }
			class = random_non_colonizable
			orbit_angle = { min = 90 max = 270 }
			orbit_distance = 5
		}
	}

	planet = {
		count = { min = 0 max = 2 }
		orbit_angle = { min = 90 max = 270 }
		orbit_distance = 20
	}

	init_effect = {
		create_starbase = {
			size = starbase_outpost
			owner = event_target:MSI_country
		}
	}
}

# Broken Shackles Parent System
broken_shackles_parent_system = {
	class = "rl_starting_stars"
	asteroid_belt = {
		type = rocky_asteroid_belt
		radius = 50
	}

	flags = { primitive_system empire_home_system }

	usage = misc_system_init

	usage_odds = {
		base = 0
		modifier = {
			any_country = {
				has_origin = origin_broken_shackles
				NOT = {
					has_country_flag = parent_system_spawned
					species_portrait = human
				}
			}
			NOT = { has_star_flag = empire_cluster }
			NOT = { has_star_flag = chosen_system } # Fixing Paradox bug
			add = 99999
		}
	}

	planet = {
		count = 1
		class = star
		orbit_distance = 0
		orbit_angle = 1
		size = { min = 20 max = 30 }
		has_ring = no
	}

	change_orbit = 20

	planet = {
		orbit_distance = 20
		count = { min = 0 max = 3 }
	}

	change_orbit = 20

	planet = {
		count = 1
		orbit_distance = 0
		class = "rl_habitable_normal"
		orbit_angle = { min = 90 max = 270 }
		size = { min = 12 max = 25 }

		flags = { }

		init_effect = {
			prevent_anomaly = yes

			random_country = {
				limit = {
					has_origin = origin_broken_shackles
					NOT = {
						has_country_flag = parent_system_spawned
						species_portrait = human
					}
				}
				set_country_flag = parent_system_spawned
				save_event_target_as = broken_shackles_child
			}

			set_planet_flag = broken_shackles_homeworld_@event_target:broken_shackles_child

			solar_system = {
				set_star_flag = broken_shackles_system
				set_star_flag = broken_shackles_home_system_@event_target:broken_shackles_child
			}

			if = { # Modern Syria
				limit = {
					any_country = {
						has_origin = origin_broken_shackles
						has_country_flag = gotc_broken_shackles_migrants
					}
				}
				set_name = {
					key="Дамаск"
					literal=yes
				}
				solar_system = {
					set_name = {
						key="Сирия"
						literal=yes
					}
					set_star_flag = syria
				}
				create_country = {
					ship_prefix="SYR"
					name = {
						key="Сирийская Арабская Республика"
						literal=yes
					}
					adjective="Асадск"
					species = event_target:broken_shackles_child
					name_list = event_target:broken_shackles_child
					authority = auth_imperial
					civics = {
						civic = civic_toxic_baths
						civic = civic_byzantine_bureaucracy
					}
					ethos = {
						ethic = ethic_fanatic_authoritarian
						ethic = ethic_xenophile
					}
					flag = {
						icon = {
							category = "legion"
							file = "flag_mp_beta_02.dds"
						}
						background= {
							category = "backgrounds"
							file = "horizontal.dds"
						}
						colors={
							"red"
							"black"
							"orange"
							"null"
						}
					}
					origin = "origin_default"
					type = primitive
					effect = {
						save_event_target_as = broken_shackles_parent
					}
				}
				event_target:broken_shackles_parent = {
					set_graphical_culture = industrial_01
					set_country_flag = machine_age
					set_pre_ftl_age = machine_age

					set_country_flag = broken_shackles_parent_country
					set_country_flag = special_intro_for@event_target:broken_shackles_child
					set_country_flag = broken_shackles_parent_of@event_target:broken_shackles_child
					owner_species = { set_species_homeworld = prevprev }

					set_country_flag = broken_shackles_syria
				}
			}
			else = {
				create_country = {
					species = event_target:broken_shackles_child
					name_list = event_target:broken_shackles_child
					type = primitive
					origin = "origin_default"
					government_restrictions = {
						authority = { NOT = { value = auth_machine_intelligence value = auth_hive_mind } }
					}
					civics = {
						civic = civic_increasing_urbanization
						civic = civic_atmospheric_pollution
					}
					flag = {
						icon = {
							category = "spherical"
							file = "flag_spherical_22.dds"
						}
						background= {
							category = "backgrounds"
							file = "new_dawn.dds"
						}
						colors={
							"turquoise"
							"green"
							"null"
							"null"
						}
					}
					effect = {
						save_event_target_as = broken_shackles_parent
					}
				}
				event_target:broken_shackles_parent = {
					set_graphical_culture = industrial_01
					random_list = {
						25 = {
							set_country_flag = industrial_age
							set_pre_ftl_age = industrial_age
							change_country_flag = {
								icon = {
									category = "pre_ftl"
									file = "preftl_industrial_age.dds"
								}
								background= {
									category = "backgrounds"
									file = "new_dawn.dds"
								}
								colors={
									"beige"
									"yellow"
									"null"
									"null"
								}
							}
						}
						25 = {
							set_country_flag = machine_age
							set_pre_ftl_age = machine_age
							change_country_flag = {
								icon = {
									category = "pre_ftl"
									file = "preftl_machine_age.dds"
								}
								background= {
									category = "backgrounds"
									file = "new_dawn.dds"
								}
								colors={
									"yellow"
									"orange"
									"null"
									"null"
								}
							}
						}
						25 = {
							set_country_flag = atomic_age
							set_pre_ftl_age = atomic_age
							change_country_flag = {
								icon = {
									category = "pre_ftl"
									file = "preftl_atomic_age.dds"
								}
								background= {
									category = "backgrounds"
									file = "new_dawn.dds"
								}
								colors={
									"beige"
									"brown"
									"null"
									"null"
								}
							}
						}
						25 = {
							set_country_flag = early_space_age
							set_pre_ftl_age = early_space_age
							change_country_flag = {
								icon = {
									category = "pre_ftl"
									file = "preftl_early_space_age.dds"
								}
								background= {
									category = "backgrounds"
									file = "new_dawn.dds"
								}
								colors={
									"grey"
									"dark_grey"
									"null"
									"null"
								}
							}
						}
					}

					set_country_flag = broken_shackles_parent_country
					set_country_flag = special_intro_for@event_target:broken_shackles_child
					set_country_flag = broken_shackles_parent_of@event_target:broken_shackles_child
					owner_species = { set_species_homeworld = prevprev }
					set_name = random # Fixes some naming issues
				}
			}

			setup_pre_ftl_broken_shackles_planet = yes
		}

		change_orbit = @base_moon_distance

		moon = {
			count = { min = 0 max = 1 }
			orbit_angle = { min = 90 max = 270 }
			orbit_distance = 5
		}
	}

	planet = {
		class = pc_gas_giant
		orbit_distance = 20
		count = { min = 1 max = 4 }

		change_orbit = @base_moon_distance

		moon = {
			count = { min = 0 max = 1 }
			orbit_angle = { min = 90 max = 270 }
			orbit_distance = 5
		}
	}

	planet = {
		class = pc_gas_giant
		orbit_distance = 20
		count = { min = 0 max = 2 }
	}
}
