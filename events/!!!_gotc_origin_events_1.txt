################################
#
# Origin Events
#
###############################

@scionRewardTimer = 9000 # minimum time between rewards from the Scion, in days (currently 25 years)
@scionRewardTimerDelay = 9000 # randomized delay added to 'scionRewardTimer', in days (currently 25 years)
@scionRefusalsCap = 2 # number of times a Scion may refuse their Overlord before they think it rude

namespace = origin

# 5:		"Scion"
# 55:		"Common Ground" & "Hegemon"
# 100:		"Lost Colony"
# 110-113:	"Broken Shackles" & "Payback"

########
# SCION
########

# Setup
country_event = {
	id = origin.5
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		set_country_flag = first_contact_event
		set_country_flag = Story2 # Already encountered spacefarers
		# Spawn mini-FE if player turned off Fallen Empires but picked this Origin anyway...
		if = {
			limit = {
				NOT = {
					any_country = {
						OR = {
							is_country_type = fallen_empire
							is_country_type = awakened_fallen_empire
						}
					}
				}
			}
			set_country_flag = scion_needs_fe
			if = {
				limit = { is_spiritualist = yes }
				random_system = {
					limit = { has_owner = no }
					spawn_system = { initializer = "scion_fallen_2" }
				}
			}
			else_if = {
				limit = { is_materialist = yes }
				random_system = {
					limit = { has_owner = no }
					spawn_system = { initializer = "scion_fallen_1" }
				}
			}
			else = {
				random_list = {
					10 = {
						random_system = {
							limit = { has_owner = no }
							spawn_system = { initializer = "scion_fallen_1" }
						}
					}
					10 = {
						random_system = {
							limit = { has_owner = no }
							spawn_system = { initializer = "scion_fallen_2" }
						}
					}
				}
			}
			add_extra_hyperlane_to_spawned_system_effect = yes
		}

		else_if = {
			limit = {
				is_spiritualist = yes
				any_country = { has_country_flag = fallen_empire_2 }
			}
			random_country = {
				limit = { has_country_flag = fallen_empire_2 }
				set_country_flag = scion_master
				save_event_target_as = scion_master
				add_opinion_modifier = {
					who = root
					modifier = opinion_scion
				}
				country_event = { id = origin.20 days = @scionRewardTimer random = @scionRewardTimerDelay }
				root = {
					establish_communications_no_message = event_target:scion_master
					set_subject_of = {
						who = event_target:scion_master
						preset = preset_scion
					}
					add_opinion_modifier = {
						who = event_target:scion_master
						modifier = opinion_scion
					}
					country_event = { id = origin.10 days = 3 }
				}
			}
		}
		else_if = {
			limit = {
				is_materialist = yes
				any_country = { has_country_flag = fallen_empire_1 }
			}
			random_country = {
				limit = { has_country_flag = fallen_empire_1 }
				set_country_flag = scion_master
				save_event_target_as = scion_master
				add_opinion_modifier = {
					who = root
					modifier = opinion_scion
				}
				country_event = { id = origin.20 days = @scionRewardTimer random = @scionRewardTimerDelay }
				root = {
					establish_communications_no_message = event_target:scion_master
					set_subject_of = {
						who = event_target:scion_master
						preset = preset_scion
					}
					add_opinion_modifier = {
						who = event_target:scion_master
						modifier = opinion_scion
					}
					country_event = { id = origin.10 days = 3 }
				}
			}
		}
		else = {
			random_country = {
				limit = {
					OR = {
						has_country_flag = fallen_empire_1
						has_country_flag = fallen_empire_2
					}
				}
				set_country_flag = scion_master
				save_event_target_as = scion_master
				add_opinion_modifier = {
					who = root
					modifier = opinion_scion
				}
				country_event = { id = origin.20 days = @scionRewardTimer random = @scionRewardTimerDelay }
				root = {
					establish_communications_no_message = event_target:scion_master
					set_subject_of = {
						who = event_target:scion_master
						preset = preset_scion
					}
					add_opinion_modifier = {
						who = event_target:scion_master
						modifier = opinion_scion
					}
					country_event = { id = origin.10 days = 3 }
				}
			}
		}
		if = {
			limit = {
				exists = event_target:scion_master
			}
			create_scion_wormhole_link = yes
		}
	}
}

##########################
# COMMON GROUND & HEGEMON
##########################

# Common Ground/Hegemon Setup
country_event = {
	id = origin.55
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		set_country_flag = first_contact_event
		set_country_flag = Story2 # Already encountered spacefarers
		give_technology = { tech = tech_federation_code message = no }

		if = { # borrel
			limit = { has_country_flag = gotc_borrel }
			capital_scope = {
				change_pc = pc_gaia
				set_planet_size = 14
			}
			# Replace prescripted ideal planets with small gaia worlds and spawn federation partners.
			if = {
				limit = { num_guaranteed_colonies >= 2 }
				capital_scope = {
					solar_system = {
						closest_system = {
							limit = { has_star_flag = neighbor_t1_first_colony }
							random_system_planet = {
								limit = { has_planet_flag = prescripted_ideal }
								change_pc = pc_gaia
								set_planet_size = 7
							}
							origin_spawn_system_effect = { INITIALIZER = common_ground_init_tsennosti }
							last_created_system = {
								random_system_planet = {
									limit = { habitable_planet = yes }
									save_event_target_as = fed_planet_1
								}
								add_extra_hyperlane_to_spawned_system_effect = yes
							}
						}
						closest_system = {
							limit = { has_star_flag = neighbor_t2_second_colony }
							random_system_planet = {
								limit = { has_planet_flag = prescripted_ideal }
								change_pc = pc_gaia
								set_planet_size = 7
							}
							origin_spawn_system_effect = { INITIALIZER = common_ground_init_vymiraty }
							last_created_system = {
								random_system_planet = {
									limit = { has_planet_flag = Vilnius }
									save_event_target_as = fed_planet_2
								}
								random_system_planet = {
									limit = { has_planet_flag = Tallinn }
									save_event_target_as = fed_planet_2_1
								}
								random_system_planet = {
									limit = { has_planet_flag = Riga }
									save_event_target_as = fed_planet_2_2
								}
								add_extra_hyperlane_to_spawned_system_effect = yes
							}
						}
					}
				}
			}
			else_if = {
				limit = { num_guaranteed_colonies >= 1 }
				capital_scope = {
					solar_system = {
						closest_system = {
							limit = { has_star_flag = neighbor_t1_first_colony }
							random_system_planet = {
								limit = { has_planet_flag = prescripted_ideal }
								change_pc = pc_gaia
								set_planet_size = 7
							}
							origin_spawn_system_effect = { INITIALIZER = common_ground_init_tsennosti }
							last_created_system = {
								random_system_planet = {
									limit = { habitable_planet = yes }
									save_event_target_as = fed_planet_1
								}
								add_extra_hyperlane_to_spawned_system_effect = yes
							}
						}
						closest_system = {
							limit = {
								NOT = { has_star_flag = neighbor_t1_first_colony }
								has_owner = no
							}
							origin_spawn_system_effect = { INITIALIZER = common_ground_init_vymiraty }
							last_created_system = {
								random_system_planet = {
									limit = { has_planet_flag = Vilnius }
									save_event_target_as = fed_planet_2
								}
								random_system_planet = {
									limit = { has_planet_flag = Tallinn }
									save_event_target_as = fed_planet_2_1
								}
								random_system_planet = {
									limit = { has_planet_flag = Riga }
									save_event_target_as = fed_planet_2_2
								}
								add_extra_hyperlane_to_spawned_system_effect = yes
							}
						}
					}
				}
			}
			else_if = {
				limit = { num_guaranteed_colonies = 0 }
				capital_scope = {
					solar_system = {
						closest_system = {
							limit = { has_owner = no }
							origin_spawn_system_effect = { INITIALIZER = common_ground_init_tsennosti }
							last_created_system = {
								random_system_planet = {
									limit = { habitable_planet = yes }
									save_event_target_as = fed_planet_1
								}
								add_extra_hyperlane_to_spawned_system_effect = yes
							}
						}
						closest_system = {
							limit = {
								NOT = { has_star_flag = fed_origin_system_1 }
								has_owner = no
							}
							origin_spawn_system_effect = { INITIALIZER = common_ground_init_vymiraty }
							last_created_system = {
								random_system_planet = {
									limit = { has_planet_flag = Vilnius }
									save_event_target_as = fed_planet_2
								}
								random_system_planet = {
									limit = { has_planet_flag = Tallinn }
									save_event_target_as = fed_planet_2_1
								}
								random_system_planet = {
									limit = { has_planet_flag = Riga }
									save_event_target_as = fed_planet_2_2
								}
								add_extra_hyperlane_to_spawned_system_effect = yes
							}
						}
					}
				}
			}

			# Create first member - tsennosti
			event_target:fed_planet_1 = {
				solar_system = { generate_home_system_resources = yes }
				create_species = {
					name = "GOTC_TSENNOSTI_MAIN_SPECIES_NAME"
					plural = "GOTC_TSENNOSTI_MAIN_SPECIES_PLURAL"
					adjective = "GOTC_TSENNOSTI_MAIN_SPECIES_ADJECTIVE"
					class = "MOL"
					portrait = "mol17"
					name_list="MOL4"
					gender=indeterminable
					traits = {
						trait = "trait_conservational"
						trait = "trait_unruly"
						trait = "trait_humanoid_psychological_infertility"
						trait = "trait_venerable"
						trait = "trait_talented"
					}
					homeworld = this
				}
				last_created_species = {
					save_event_target_as = fed_planet_1_species
				}
				# Common Ground
				create_country = {
					ship_prefix = "GOTC_TSENNOSTI_SHIP_PREFIX"
					name = "GOTC_TSENNOSTI_EMPIRE_NAME"
					adjective = "GOTC_TSENNOSTI_EMPIRE_ADJECTIVE"
					name_list = MOL4
					species = event_target:fed_planet_1_species
					type = default
					flag = {
						icon = {
							category="human"
							file="flag_human_3.dds"
						}
						background = {
							category="backgrounds"
							file="rounded_middle.dds"
						}
						colors = {
							"red_orange"
							"burgundy"
							"null"
							"null"
						}
					}
					origin = "origin_common_ground_npc"
					ignore_initial_colony_error = yes
					day_zero_contact = no
					ethos = {
						ethic = "ethic_egalitarian"
						ethic = "ethic_fanatic_xenophile"
					}
					civics = {
						civic = civic_free_haven
						civic = civic_pleasure_seekers
					}
					authority = auth_oligarchic
					effect = {
						save_event_target_as = fed_member_1
						establish_communications_no_message = root
						set_graphical_culture = molluscoid_01

						# Leader
						create_leader = {
							class = official
							species = event_target:fed_planet_1_species
							name = "GOTC_TSENNOSTI_RULER_NAME"
							gender=female
							skill = 1
							randomize_traits = no
							traits = {
								trait = leader_trait_resolution_category_sanctions_focus
								trait = leader_trait_eager
								trait = leader_trait_bureaucratic
							}
						}
						set_male_ruler_title = "GOTC_TSENNOSTI_RULER_TITLE"
						set_female_ruler_title = "GOTC_TSENNOSTI_RULER_TITLE_FEMALE"
						set_leader = last_created_leader
					}
				}
				create_colony = {
					owner = event_target:fed_member_1
				}
				generate_start_deposits_and_blockers = yes
				generate_start_buildings_and_districts = yes
				set_name = "GOTC_TSENNOSTI_PLANET_NAME"
				if = {
					limit = {
						owner = { 
							any_owned_planet = {
								has_building = building_hive_capital
							}
						}
					}
					owner = {
						every_owned_planet = {
							remove_building = building_hive_capital
						}
					}
				}
				else = {
					owner = {
						every_owned_planet = {
							remove_building = building_colony_shelter
						}
					}
				}
				generate_start_pops = yes
				event_target:fed_member_1 = {
					country_event = { id = game_start.8 }
					give_starting_resources_effect = yes
					give_technology = { tech = tech_federation_code message = no }
				}
				solar_system = {
					create_starbase = {
						size = starbase_starport
						module = shipyard
						building = crew_quarters
						owner = event_target:fed_member_1
						effect = {
							set_starbase_module = {
								slot = 1
								module = trading_hub
							}
							set_starbase_module = {
								slot = 2
								module = shipyard
							}
						}
					}
				}
			}

			# Create second member - vymiraty
			event_target:fed_planet_2 = {
				solar_system = { generate_home_system_resources = yes }
				create_species = {
					name = "GOTC_VYMIRATY_MAIN_SPECIES_NAME"
					plural = "GOTC_VYMIRATY_MAIN_SPECIES_PLURAL"
					adjective = "GOTC_VYMIRATY_MAIN_SPECIES_ADJECTIVE"
					class = "LITHOID"
					portrait = "lith12"
					name_list="LITHOID2"
					gender=not_set
					traits = {
						trait = "trait_lithoid"
						trait = "trait_fleeting_lithoid"
						trait = "trait_slow_learners"
						trait = "trait_lithoid_scintillating"
						trait = "trait_traditional"
						trait = "trait_gene_mentorship"
						trait = "trait_crafted_smiles"
					}
					homeworld = this
				}
				last_created_species = {
					save_event_target_as = fed_planet_2_species
				}
				if = { # zamkadets specie exist
					limit = {
						any_playable_country = { has_country_flag = gotc_voldemar }
					}
					random_playable_country = {
						limit = { has_country_flag = gotc_voldemar }
						owner_main_species = {
							save_event_target_as = zamkadets
						}
					}
				}
				else = { # no zamkadets
					create_species = {
						name = "GOTC_VOLDEMAR_MAIN_SPECIES_NAME"
						plural = "GOTC_VOLDEMAR_MAIN_SPECIES_PLURAL"
						adjective = "GOTC_VOLDEMAR_MAIN_SPECIES_ADJECTIVE"
						class = "HUM"
						portrait = "humanoid_02"
						name_list="HUMAN2"
						gender=not_set
						traits = {
							trait = "trait_survivor"
							trait = "trait_ingenious"
							trait = "trait_wasteful"
							trait = "trait_communal"
							trait = "trait_fleeting"
							trait = "trait_noxious"
						}
						homeworld = this
					}
					last_created_species = {
						save_event_target_as = zamkadets
					}
				}
				# Common Ground
				create_country = {
					ship_prefix = "GOTC_VYMIRATY_SHIP_PREFIX"
					name = "GOTC_VYMIRATY_EMPIRE_NAME"
					adjective = "GOTC_VYMIRATY_EMPIRE_ADJECTIVE"
					name_list = LITHOID2
					species = event_target:fed_planet_2_species
					type = default
					flag = {
						icon = {
							category="legion"
							file="flag_mp_beta_02.dds"
						}
						background = {
							category="backgrounds"
							file="flag_BG_24.dds"
						}
						colors = {
							"indigo"
							"black"
							"black"
							"null"
						}
					}
					origin = "origin_common_ground_npc"
					ignore_initial_colony_error = yes
					day_zero_contact = no
					ethos = {
						ethic = "ethic_egalitarian"
						ethic = "ethic_xenophobe"
						ethic = "ethic_militarist"
					}
					civics = {
						civic = civic_crusader_spirit
						civic = civic_selective_kinship
					}
					authority = auth_democratic
					effect = {
						save_event_target_as = fed_member_2
						establish_communications_no_message = root
						set_graphical_culture = lithoid_01
						set_city_graphical_culture = wilderness_01

						# Leader
						create_leader = {
							class = commander
							species = event_target:fed_planet_2_species
							name = "GOTC_VYMIRATY_RULER_NAME"
							gender=female
							skill = 1
							randomize_traits = no
							traits = {
								trait = leader_trait_arrested_development
								trait = trait_ruler_warlike
								trait = leader_trait_crusader
							}
						}
						set_male_ruler_title = "GOTC_VYMIRATY_RULER_TITLE"
						set_female_ruler_title = "GOTC_VYMIRATY_RULER_TITLE_FEMALE"
						set_leader = last_created_leader
					}
				}
				create_colony = {
					owner = event_target:fed_member_2
				}
				generate_start_deposits_and_blockers = yes
				generate_start_buildings_and_districts = yes
				set_name = "GOTC_VYMIRATY_PLANET_NAME"
				if = {
					limit = {
						owner = { 
							any_owned_planet = {
								has_building = building_hive_capital
							}
						}
					}
					owner = {
						every_owned_planet = {
							remove_building = building_hive_capital
						}
					}
				}
				else = {
					owner = {
						every_owned_planet = {
							remove_building = building_colony_shelter
						}
					}
				}
				create_pop_group = {
					size = 2300
					species = event_target:fed_planet_2_species
				}
				create_pop_group = {
					size = 100
					species = event_target:zamkadets
				}
				event_target:fed_member_2 = {
					country_event = { id = game_start.8 }
					give_starting_resources_effect = yes
					give_technology = { tech = tech_federation_code message = no }
					give_technology = { tech = tech_satisfying_insults }
				}
				solar_system = {
					create_starbase = {
						size = starbase_starport
						module = shipyard
						building = crew_quarters
						owner = event_target:fed_member_2
						effect = {
							set_starbase_module = {
								slot = 1
								module = trading_hub
							}
							set_starbase_module = {
								slot = 2
								module = shipyard
							}
						}
					}
				}
			}
			event_target:fed_planet_2_1 = {
				create_colony = {
					owner = event_target:fed_member_2
					species = event_target:fed_planet_2_species
				}
				create_pop_group = {
					size = 600
					species = event_target:fed_planet_2_species
				}
				create_pop_group = {
					size = 200
					species = event_target:zamkadets
				}
				set_name = "GOTC_VYMIRATY_PLANET_NAME_2"
			}
			event_target:fed_planet_2_2 = {
				create_colony = {
					owner = event_target:fed_member_2
					species = event_target:fed_planet_2_species
				}
				create_pop_group = {
					size = 600
					species = event_target:fed_planet_2_species
				}
				create_pop_group = {
					size = 200
					species = event_target:zamkadets
				}
				set_name = "GOTC_VYMIRATY_PLANET_NAME_3"
			}

			# Finish setting up member empires
			event_target:fed_member_1 = {
				create_starting_leaders = yes
				country_event = { id = game_start.9 } # create starter set of ships
				country_event = { id = game_start.33 days = 1 } # needs delay for system ownership to settle
				country_event = { id = origin.58 days = 1 } # delayed for federation assignment to settle
				join_alliance = {
					who = root
					override_requirements = yes
				}
				#set_name = random # Fixes some naming issues
			}
			event_target:fed_member_2 = {
				create_starting_leaders = yes
				country_event = { id = game_start.9 }
				country_event = { id = game_start.33 days = 1 } # needs delay for system ownership to settle
				country_event = { id = origin.58 days = 1 } # delayed for federation assignment to settle
				join_alliance = {
					who = root
					override_requirements = yes
				}
				#set_name = random # Fixes some naming issues
			}

			# Set Intel levels, Opinion, and Federation laws
			event_target:fed_member_1 = {
				add_opinion_modifier = {
					who = root
					modifier = opinion_common_ground
				}
				add_trust = {
					amount = 50
					who = root
				}
				add_trust = {
					amount = 50
					who = event_target:fed_member_2
				}
				add_intel = {
					amount = 60
					who = root
				}
				add_intel = {
					amount = 60
					who = event_target:fed_member_2
				}
			}
			event_target:fed_member_2 = {
				add_opinion_modifier = {
					who = root
					modifier = opinion_common_ground
				}
				add_trust = {
					amount = 50
					who = root
				}
				add_trust = {
					amount = 50
					who = event_target:fed_member_1
				}
				add_intel = {
					amount = 60
					who = root
				}
				add_intel = {
					amount = 60
					who = event_target:fed_member_1
				}
			}
			add_opinion_modifier = {
				who = event_target:fed_member_1
				modifier = opinion_common_ground
			}
			add_opinion_modifier = {
				who = event_target:fed_member_2
				modifier = opinion_common_ground
			}
			add_trust = {
				amount = 50
				who = event_target:fed_member_1
			}
			add_trust = {
				amount = 50
				who = event_target:fed_member_2
			}
			add_intel = {
				amount = 60
				who = event_target:fed_member_1
			}
			add_intel = {
				amount = 60
				who = event_target:fed_member_2
			}
			set_federation_leader = root
			federation = {
				set_federation_type = eu_federation
				set_federation_leader = root
				set_name = "GOTC_EU_FEDERATION_NAME"
				set_federation_law = succession_term_years_10
				add_federation_experience = 600
				add_cohesion = 100
			}
		}
		else = { # vanilla
			# Replace prescripted ideal planets with barren worlds and spawn federation partners.
			if = {
				limit = { num_guaranteed_colonies >= 2 }
				capital_scope = {
					solar_system = {
						closest_system = {
							limit = { has_star_flag = neighbor_t1_first_colony }
							random_system_planet = {
								limit = { has_planet_flag = prescripted_ideal }
								change_pc = pc_barren
							}
							spawn_random_home_system = yes
							last_created_system = {
								federation_origin_planet_setup = {
									NUM = 1
								}
							}
						}
						closest_system = {
							limit = { has_star_flag = neighbor_t2_second_colony }
							random_system_planet = {
								limit = { has_planet_flag = prescripted_ideal }
								change_pc = pc_barren
							}
							spawn_random_home_system = yes
							last_created_system = {
								federation_origin_planet_setup = {
									NUM = 2
								}
							}
						}
					}
				}
			}
			if = {
				limit = { num_guaranteed_colonies >= 1 }
				capital_scope = {
					solar_system = {
						closest_system = {
							limit = { has_star_flag = neighbor_t1_first_colony }
							random_system_planet = {
								limit = { has_planet_flag = prescripted_ideal }
								change_pc = pc_barren
							}
							spawn_random_home_system = yes
							last_created_system = {
								federation_origin_planet_setup = {
									NUM = 1
								}
							}
						}
						closest_system = {
							limit = {
								NOT = { has_star_flag = neighbor_t1_first_colony }
								has_owner = no
							}
							spawn_random_home_system = yes
							last_created_system = {
								federation_origin_planet_setup = {
									NUM = 2
								}
							}
						}
					}
				}
			}
			if = {
				limit = { num_guaranteed_colonies = 0 }
				capital_scope = {
					solar_system = {
						closest_system = {
							limit = { has_owner = no }
							spawn_random_home_system = yes
							last_created_system = {
								federation_origin_planet_setup = {
									NUM = 1
								}
							}
						}
						closest_system = {
							limit = {
								NOT = { has_star_flag = fed_origin_system_1 }
								has_owner = no
							}
							spawn_random_home_system = yes
							last_created_system = {
								federation_origin_planet_setup = {
									NUM = 2
								}
							}
						}
					}
				}
			}

			# Create first member
			event_target:fed_planet_1 = {
				solar_system = { generate_home_system_resources = yes }
				if = {
					limit = {
						root = {
							NOT = {
								has_valid_civic = civic_selective_kinship
							}
						}
					}
					create_fed_planet_1_species = { CLASS = random }
				}
				else = {
					root = {
						switch = {
							trigger = is_species_class
							HUM =		{ create_fed_planet_1_species = { CLASS = HUM } }
							MAM =		{ create_fed_planet_1_species = { CLASS = MAM } }
							FUN =		{ create_fed_planet_1_species = { CLASS = FUN } }
							AVI =		{ create_fed_planet_1_species = { CLASS = AVI } }
							PLANT =		{ create_fed_planet_1_species = { CLASS = PLANT } }
							ART =		{ create_fed_planet_1_species = { CLASS = ART } }
							REP =		{ create_fed_planet_1_species = { CLASS = REP } }
							MOL =		{ create_fed_planet_1_species = { CLASS = MOL } }
							LITHOID =	{ create_fed_planet_1_species = { CLASS = LITHOID } }
							NECROID =	{ create_fed_planet_1_species = { CLASS = NECROID } }
							AQUATIC =	{ create_fed_planet_1_species = { CLASS = AQUATIC } }
							TOX =		{ create_fed_planet_1_species = { CLASS = TOX } }
							default =	{ create_fed_planet_1_species = { CLASS = HUM } }
						}
					}
				}
				# Common Ground
				if = {
					limit = {
						root = { has_origin = origin_common_ground }
					}
					create_common_ground_member = { NUM = 1 }
				}
				# Hegemon
				if = {
					limit = {
						root = {
							has_origin = origin_hegemon
							NOT = { has_ethic = ethic_xenophobe }
						}
					}
					create_hegemon_member = {
						NUM = 1
					}
				}
				create_colony = {
					owner = event_target:fed_member_1
				}
				generate_start_deposits_and_blockers = yes
				generate_start_buildings_and_districts = yes
				if = {
					limit = {
						owner = { 
							any_owned_planet = {
								has_building = building_hive_capital
							}
						}
					}
					owner = {
						every_owned_planet = {
							remove_building = building_hive_capital
						}
					}
				}
				else = {
					owner = {
						every_owned_planet = {
							remove_building = building_colony_shelter
						}
					}
				}
				generate_start_pops = yes
				event_target:fed_member_1 = {
					country_event = { id = game_start.8 }
					give_starting_resources_effect = yes
					give_technology = { tech = tech_federation_code message = no }
				}
				solar_system = {
					if = {
						limit = {
							event_target:fed_member_1 = {
								is_gestalt = no
							}
						}
						create_starbase = {
							size = starbase_starport
							module = shipyard
							building = crew_quarters
							owner = event_target:fed_member_1
							effect = {
								set_starbase_module = {
									slot = 1
									module = trading_hub
								}
								set_starbase_module = {
									slot = 2
									module = shipyard
								}
							}
						}
					}
					else = {
						create_starbase = {
							size = starbase_starport
							module = shipyard
							building = crew_quarters
							owner = event_target:fed_member_1
							effect = {
								if = {
									limit = {
										event_target:fed_member_1 = {
											has_valid_civic = civic_machine_astromining_drones
										}	
									}
									set_starbase_module = {
										slot = 1
										module = astromining_bay
									}
								}
								else = {
									set_starbase_module = {
										slot = 1
										module = solar_panel_network
									}
								}
								set_starbase_module = {
									slot = 2
									module = shipyard
								}
							}
						}
					}
				}
			}

			# Create second member
			event_target:fed_planet_2 = {
				solar_system = { generate_home_system_resources = yes }
				if = {
					limit = {
						root = {
							NOT = {
								has_valid_civic = civic_selective_kinship
							}
						}
					}
					create_fed_planet_2_species = { CLASS = random }
				}
				else = {
					root = {
						switch = {
							trigger = is_species_class
							HUM =		{ create_fed_planet_2_species = { CLASS = HUM } }
							MAM =		{ create_fed_planet_2_species = { CLASS = MAM } }
							FUN =		{ create_fed_planet_2_species = { CLASS = FUN } }
							AVI =		{ create_fed_planet_2_species = { CLASS = AVI } }
							PLANT =		{ create_fed_planet_2_species = { CLASS = PLANT } }
							ART =		{ create_fed_planet_2_species = { CLASS = ART } }
							REP =		{ create_fed_planet_2_species = { CLASS = REP } }
							MOL =		{ create_fed_planet_2_species = { CLASS = MOL } }
							LITHOID =	{ create_fed_planet_2_species = { CLASS = LITHOID } }
							NECROID =	{ create_fed_planet_2_species = { CLASS = NECROID } }
							AQUATIC =	{ create_fed_planet_2_species = { CLASS = AQUATIC } }
							TOX =		{ create_fed_planet_2_species = { CLASS = TOX } }
							default =	{ create_fed_planet_2_species = { CLASS = HUM } }
						}
					}
				}
				# Common Ground
				if = {
					limit = {
						root = { has_origin = origin_common_ground }
					}
					create_common_ground_member = { NUM = 2 }
				}
				# Hegemon
				if = {
					limit = {
						root = {
							has_origin = origin_hegemon
							NOT = { has_ethic = ethic_xenophobe }
						}
					}
					create_hegemon_member = {
						NUM = 2
					}
				}
				create_colony = {
					owner = event_target:fed_member_2
				}
				generate_start_deposits_and_blockers = yes
				generate_start_buildings_and_districts = yes
				if = {
					limit = {
						owner = { 
							any_owned_planet = {
								has_building = building_hive_capital
							}
						}
					}
					owner = {
						every_owned_planet = {
							remove_building = building_hive_capital
						}
					}
				}
				else = {
					owner = {
						every_owned_planet = {
							remove_building = building_colony_shelter
						}
					}
				}
				generate_start_pops = yes
				event_target:fed_member_2 = {
					country_event = { id = game_start.8 }
					give_starting_resources_effect = yes
					give_technology = { tech = tech_federation_code message = no }
				}
				solar_system = {
					if = {
						limit = {
							event_target:fed_member_2 = {
								is_gestalt = no
							}
						}
						create_starbase = {
							size = starbase_starport
							module = shipyard
							building = crew_quarters
							owner = event_target:fed_member_2
							effect = {
								set_starbase_module = {
									slot = 1
									module = trading_hub
								}
								set_starbase_module = {
									slot = 2
									module = shipyard
								}
							}
						}
					}
					else = {
						create_starbase = {
							size = starbase_starport
							module = shipyard
							building = crew_quarters
							owner = event_target:fed_member_2
							effect = {
								if = {
									limit = {
										event_target:fed_member_2 = {
											has_valid_civic = civic_machine_astromining_drones
										}	
									}
									set_starbase_module = {
										slot = 1
										module = astromining_bay
									}
								}
								else = {
									set_starbase_module = {
										slot = 1
										module = solar_panel_network
									}
								}
								set_starbase_module = {
									slot = 2
									module = shipyard
								}
							}
						}
					}
				}
			}

			# Finish setting up member empires
			event_target:fed_member_1 = {
				create_starting_leaders = yes
				country_event = { id = game_start.9 } # create starter set of ships
				country_event = { id = game_start.33 days = 1 } # needs delay for system ownership to settle
				country_event = { id = origin.58 days = 1 } # delayed for federation assignment to settle
				join_alliance = {
					who = root
					override_requirements = yes
				}
				set_name = random # Fixes some naming issues
			}
			event_target:fed_member_2 = {
				create_starting_leaders = yes
				country_event = { id = game_start.9 }
				country_event = { id = game_start.33 days = 1 } # needs delay for system ownership to settle
				country_event = { id = origin.58 days = 1 } # delayed for federation assignment to settle
				join_alliance = {
					who = root
					override_requirements = yes
				}
				set_name = random # Fixes some naming issues
			}

			# Set Intel levels, Opinion, and Federation laws
			if = {
				limit = { has_origin = origin_common_ground }
				event_target:fed_member_1 = {
					add_opinion_modifier = {
						who = root
						modifier = opinion_common_ground
					}
					add_trust = {
						amount = 50
						who = root
					}
					add_trust = {
						amount = 50
						who = event_target:fed_member_2
					}
					add_intel = {
						amount = 60
						who = root
					}
					add_intel = {
						amount = 60
						who = event_target:fed_member_2
					}
				}
				event_target:fed_member_2 = {
					add_opinion_modifier = {
						who = root
						modifier = opinion_common_ground
					}
					add_trust = {
						amount = 50
						who = root
					}
					add_trust = {
						amount = 50
						who = event_target:fed_member_1
					}
					add_intel = {
						amount = 60
						who = root
					}
					add_intel = {
						amount = 60
						who = event_target:fed_member_1
					}
				}
				add_opinion_modifier = {
					who = event_target:fed_member_1
					modifier = opinion_common_ground
				}
				add_opinion_modifier = {
					who = event_target:fed_member_2
					modifier = opinion_common_ground
				}
				add_trust = {
					amount = 50
					who = event_target:fed_member_1
				}
				add_trust = {
					amount = 50
					who = event_target:fed_member_2
				}
				add_intel = {
					amount = 60
					who = event_target:fed_member_1
				}
				add_intel = {
					amount = 60
					who = event_target:fed_member_2
				}
				set_federation_leader = root
				country_event = { id = origin.57 days = 2 }
			}
			if = {
				limit = { has_origin = origin_hegemon }
				federation = {
					set_federation_type = hegemony_federation
					set_federation_leader = root
					set_name = random
					set_federation_law = succession_term_years_20
					add_federation_experience = 600
					add_cohesion = 100
				}
				event_target:fed_member_1 = {
					add_intel = {
						amount = 40
						who = root
					}
					add_intel = {
						amount = 40
						who = event_target:fed_member_2
					}
					set_closed_borders = {
						who = root
						status = no
					}
					set_closed_borders = {
						who = event_target:fed_member_2
						status = no
					}
				}
				event_target:fed_member_2 = {
					add_intel = {
						amount = 40
						who = root
					}
					add_intel = {
						amount = 40
						who = event_target:fed_member_1
					}
					set_closed_borders = {
						who = root
						status = no
					}
					set_closed_borders = {
						who = event_target:fed_member_1
						status = no
					}
				}
				add_intel = {
					amount = 40
					who = event_target:fed_member_1
				}
				set_closed_borders = {
					who = event_target:fed_member_1
					status = no
				}
				add_intel = {
					amount = 40
					who = event_target:fed_member_2
				}
				set_closed_borders = {
					who = event_target:fed_member_2
					status = no
				}
			}
		}
	}
}

##############
# LOST COLONY
##############

# Lost Colony Setup
country_event = {
	id = origin.100
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				is_human_species = no
			}
			random_country = {
				limit = {
					has_country_flag = lost_colony_parent_of@root
				}
				capital_scope = { change_pc = root.species }
				every_owned_planet = {
					limit = { has_planet_flag = lost_colony_planet }
					change_pc = root.species
				}
			}
		}
	}
}

############################
# BROKEN SHACKLES & PAYBACK
############################

# Broken Shackles Setup
country_event = {
	id = origin.110
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		low_tech_start_add_research_options_effect = yes

		# Broken Shackles pops are aware of alien life
		set_country_flag = encountered_first_primitive
		set_country_flag = first_contact_event
		set_country_flag = first_alien_life
		set_country_flag = Story1
		set_country_flag = Story2 # Already encountered spacefarers
		set_country_flag = Story3
		set_country_flag = Story4
		set_country_flag = Story5
		set_country_flag = Story6
		set_country_flag = Story7
		set_country_flag = has_encountered_other_empire

		if = { # Migrants
			limit = { has_country_flag = gotc_broken_shackles_migrants }
			capital_scope = {
				spawn_pre_ftl_against_zion = yes

				solar_system = {
					set_star_flag = broken_shackles_system
				}
				while = {
					limit = { pop_amount < 4800 }
					if = {
						limit = {
							any_country = {
								species = {
									ideal_planet_is_special = no
									NOT = { has_trait = trait_hive_mind }
								}
								OR = {
									has_country_flag = broken_shackles_zion_abductees
									AND = {
										has_slave_origin = yes
										NOT = { is_same_value = root }
									}
								}
							}
						}
						random_country = {
							limit = {
								species = {
									ideal_planet_is_special = no
									NOT = { has_trait = trait_hive_mind }
								}
								OR = {
									has_country_flag = broken_shackles_zion_abductees
									AND = {
										has_slave_origin = yes
										NOT = { is_same_value = root }
									}
								}
							}
							set_country_flag = broken_shackles_abductees_country
							set_country_flag = broken_shackles_abductees@root
							owner_species = { save_event_target_as = random_primitive_species }
							capital_scope = {
								set_planet_flag = broken_shackles_abductees_world@root
							}
							if = {
								limit = {
									is_primitive = yes
									has_awareness < 75
								}
								set_awareness = 75
							}
						}
						create_pop_group = {
							species = event_target:random_primitive_species
						}
					}
				}
			}
		}
		else = {
			if = {
				limit = {
					count_country = {
						limit = {
							is_primitive = yes
						}
						count < 3
					}
				}
				capital_scope = {
					while = {
						count = 3
						spawn_system = {
							min_distance = 10
							max_distance = 100
							initializer = pre_ftl_init_01
							hyperlane = no
							is_discovered = no
						}
						add_extra_hyperlane_to_spawned_system_effect = yes
						add_extra_hyperlane_to_spawned_system_effect = yes
					}
				}
			}

			capital_scope = {
				solar_system = {
					set_star_flag = broken_shackles_system
				}
				while = {
					limit = { pop_amount < 4800 }
					if = {
						limit = {
							any_country = {
								species = {
									ideal_planet_is_special = no
									NOT = { has_trait = trait_hive_mind }
								}
								OR = {
									is_preftl_but_not_special = yes
									AND = {
										has_slave_origin = yes
										NOT = { is_same_value = root }
									}
								}
							}
						}
						random_country = {
							limit = {
								species = {
									ideal_planet_is_special = no
									NOT = { has_trait = trait_hive_mind }
								}
								OR = {
									is_preftl_but_not_special = yes
									AND = {
										has_slave_origin = yes
										NOT = { is_same_value = root }
									}
								}
							}
							set_country_flag = broken_shackles_abductees_country
							set_country_flag = broken_shackles_abductees@root
							owner_species = { save_event_target_as = random_primitive_species }
							capital_scope = {
								set_planet_flag = broken_shackles_abductees_world@root
							}
							if = {
								limit = {
									is_primitive = yes
									has_awareness < 75
								}
								set_awareness = 75
							}
						}
						create_pop_group = {
							species = event_target:random_primitive_species
						}
					}
				}
			}
		}

		capital_scope = {
			check_planet_employment = yes

			# Dig site
			owner = {
				set_country_flag = broken_shackles_origin_arcsite_owner@prev
			}
			create_archaeological_site = broken_shackles_digsite
		}

		if = {
			limit = {
				has_paragon_dlc = yes
			}
			unlock_council_slots = 3
			set_council_position_to_council = councilor_research
			set_council_position_to_council = councilor_defense
			set_council_position_to_council = councilor_state
		}

		weighted_random_owned_pop_group = {
			species = {
				save_event_target_as = researcher_species
			}
		}
		create_leader = {
			class = scientist
			name = random
			species = event_target:researcher_species
			effect = {
				set_council_position = councilor_research
			}
		}

		weighted_random_owned_pop_group = {
			species = {
				save_event_target_as = defense_species
			}
			weights = {
				base = 1
				modifier = {
					add = 100
					species = {
						NOT = {
							is_same_value = event_target:researcher_species
						}
					}
				}
			}
		}
		create_leader = {
			class = commander
			name = random
			species = event_target:defense_species
			effect = {
				set_council_position = councilor_defense
			}
		}

		weighted_random_owned_pop_group = {
			species = {
				save_event_target_as = state_species
			}

			weights = {
				base = 1
				modifier = {
					add = 100
					species = {
						NOR = {
							is_same_value = event_target:researcher_species
							is_same_value = event_target:defense_species
						}
					}
				}
			}
		}
		create_leader = {
			class = official
			name = random
			species = event_target:state_species
			effect = {
				set_council_position = councilor_state
				root.capital_scope = {
					assign_leader = last_created_leader
				}
			}
		}

		if = {
			limit = {
				is_human_species = no
			}
			random_country = {
				limit = {
					has_country_flag = broken_shackles_parent_of@root
				}
				capital_scope = { change_pc = root.species }
			}
		}
		else = {
			# Spawn Primitive Earth if no other Earth exists
			if = {
				limit = {
					NOT = {
						exists = event_target:sol_system_earth
					}
				}
				random_system = {
					limit = { NOT = { has_star_flag = empire_cluster } }
					spawn_system = {
						min_distance = 10
						max_distance = 30
						max_jumps = 0
						initializer = "pre_ftl_init_sol"
					}
				}
			}

			set_country_flag = parent_system_spawned
			save_event_target_as = broken_shackles_child

			# Now make Earth our homeworld
			event_target:sol_system_earth = {
				if = {
					limit = {
						exists = owner
					}
					owner = {
						set_country_flag = broken_shackles_parent_country
						set_country_flag = special_intro_for@event_target:broken_shackles_child
						set_country_flag = broken_shackles_parent_of@event_target:broken_shackles_child
					}
					set_planet_flag = broken_shackles_homeworld_@root
					solar_system = {
						set_star_flag = broken_shackles_home_system_@root
					}
				}
			}

			owner_species = { set_species_homeworld = event_target:sol_system_earth }
		}

		capital_scope = {
			# Safety pops in case there are literally no other primitives in the galaxy
			while = {
				limit = { pop_amount < 2800 }
				create_pop_group = {
					species = owner_main_species
				}
			}
			check_planet_employment = yes
			# Add civilians
			while = {
				count = 4
				weighted_random_owned_pop_group = {
					add_pop_amount = 500
				}
			}
		}
		random_country = {
			limit = {
				has_country_flag = broken_shackles_parent_of@root
				is_primitive = yes
			}
			set_awareness = 75
		}

		# Parliamentary System interaction
		if = {
			limit = {
				has_valid_civic = civic_parliamentary_system
			}
			country_event = {
				id = origin.5041
				days = 30
			}
		}
	}
}

# Spawn Broken Shackles for Payback
country_event = {
	id = origin.112
	hide_window = yes

	fire_only_once = yes

	is_triggered_only = yes

	immediate = {
		if = { # zion victims
			limit = {
				any_playable_country = {
					has_origin = origin_payback
					capital_scope = {
						solar_system = {
							has_star_flag = palestina
						}
					}
				}
			}
			capital_scope = {
				spawn_pre_ftl_against_zion = yes
			}
		}
		else_if = {
			limit = {
				count_country = {
					limit = {
						is_primitive = yes
					}
					count < 3
				}
			}
			capital_scope = {
				while = {
					count = 3
					spawn_system = {
						min_distance = 10
						max_distance = 100
						initializer = pre_ftl_init_01
						hyperlane = no
						is_discovered = no
					}
					add_extra_hyperlane_to_spawned_system_effect = yes
					add_extra_hyperlane_to_spawned_system_effect = yes
				}
			}
		}
		if = {
			limit = {
				any_playable_country = {
					has_origin = origin_broken_shackles
				}
			}
		}
		else = {
			uplift_pre_ftl_with_origin_effect = {
				ORIGIN = origin_broken_shackles
			}
			set_country_flag = victims_of_@event_target:MSI_country
		}
	}
}

# Spawn Payback for Broken Shackles
country_event = {
	id = origin.113
	hide_window = yes

	fire_only_once = yes

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				any_playable_country = {
					has_origin = origin_payback
				}
			}
		}
		else = {
			uplift_pre_ftl_with_origin_effect = {
				ORIGIN = origin_payback
			}
			set_country_flag = victims_of_@event_target:MSI_country
		}
	}
}
